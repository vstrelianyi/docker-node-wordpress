# https://github.com/GaryClarke/nginx-php7.4-mysql8-node-docker-network
# https://www.youtube.com/watch?v=ITOnpzkzlYM
# https://github.com/mjstealey/wordpress-nginx-docker
# https://steveholgado.com/nginx-for-nextjs/#passing-requests-to-our-nextjs-app
# https://www.digitalocean.com/community/tutorials/how-to-install-wordpress-with-docker-compose
# https://bobcares.com/blog/add-subdomain-nginx-digitalocean/

# source .env
version: '3.9'

networks:
  nginx-node-wordpress:
    name: nginx-node-wordpress
    driver: bridge
    # external: true

services:
  # bash -c "apt-get update && apt-get install mc -y"
  # apk update
  # apk add nano
  # apk add mc
  # docker-compose up -d nginx-service
  nginx-service:
    image: nginx:stable-alpine

    container_name: nginx-c

    ports:
      # http external ( browser ) -> internal nginx server port
      - "80:80"
      - "443:443"
      # - "8080:8080"
      # - "8443:8443"

    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      # - ./nginx/next.conf:/etc/nginx/conf.d/next.conf
      # - ./nginx/wordpress.conf:/etc/nginx/conf.d/wordpress.conf

      - ${WORDPRESS_LOCAL_HOME}:/var/www/html/wordpress

      - ./subdomains/backend:/var/www/html/backend

      - ${NGINX_SSL_CERTS}:/etc/ssl:ro
      - ${NGINX_LOGS}:/var/log/nginx

    networks:
      - nginx-node-wordpress

  # docker-compose up --build next-service
  next-service:
    image: next-js
    build:
      context: ./
      dockerfile: ./Dockerfile.next
    container_name: next-c

    # ports:
    #   - "3000:3000"

    restart: always

    networks:
      - nginx-node-wordpress

  # docker-compose up -d wordpress-service
  # bash -c "apt-get update && apt-get install mc -y"
  # https://localhost:8443/wp-login.php
  wordpress-service:
    # default port 9000 (FastCGI)
    image: wordpress:5-fpm
    container_name: wordpress-c
    env_file:
      - .env
    restart: unless-stopped
    networks:
      - nginx-node-wordpress
    depends_on:
      - database-service

    working_dir: /var/www/html/wordpress
    volumes:
      - ${WORDPRESS_LOCAL_HOME}:/var/www/html/wordpress
      - ${WORDPRESS_UPLOADS_CONFIG}:/usr/local/etc/php/conf.d/uploads.ini
      # - /path/to/repo/myTheme/:/var/www/html/wp-content/themes/myTheme
    environment:
      - WORDPRESS_DB_HOST=${WORDPRESS_DB_HOST}
      - WORDPRESS_DB_NAME=${WORDPRESS_DB_NAME}
      - WORDPRESS_DB_USER=${WORDPRESS_DB_USER}
      - WORDPRESS_DB_PASSWORD=${WORDPRESS_DB_PASSWORD}

  # Server/host: database-service:3306
  database-service:
    image: mysql:latest
    container_name: database-c
    env_file:
      - .env
    restart: unless-stopped
    networks:
      - nginx-node-wordpress
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    volumes:
      - ${MYSQL_LOCAL_HOME}:/var/lib/mysql

    # command:
      # - '--default-authentication-plugin=mysql_native_password'

    # default port 3306
    # ports:
    #   - 3306:3306

  # docker-compose up -d adminer-service
  # docker-compose up --build adminer-service
  # Server/host: database-service:3306
  # http://185.69.153.211:9000/?server=database-service&username=admin&db=wordpress&select=wp_options
  adminer-service:
    # default port 8080
    image: adminer:4
    container_name: adminer-c
    restart: unless-stopped
    networks:
      - nginx-node-wordpress
    depends_on:
      - database-service
    ports:
      - "9000:8080"

